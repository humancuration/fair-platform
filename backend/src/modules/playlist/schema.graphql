type Playlist {
  id: ID!
  name: String!
  description: String
  userId: Int!
  groupId: Int
  mediaItems: [MediaItem!]!
  visibility: Visibility!
  user: User!
  group: Group
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MediaItem {
  id: ID!
  type: MediaType!
  title: String!
  url: String!
  order: Int!
}

enum MediaType {
  VIDEO
  AUDIO
  IMAGE
  DOCUMENT
}

input CreatePlaylistInput {
  name: String!
  description: String
  groupId: Int
  visibility: Visibility!
}

input UpdatePlaylistInput {
  name: String
  description: String
  groupId: Int
  visibility: Visibility
}

input MediaItemInput {
  type: MediaType!
  title: String!
  url: String!
}

type Query {
  playlist(id: ID!): Playlist
  userPlaylists: [Playlist!]!
  groupPlaylists(groupId: Int!): [Playlist!]!
}

type Mutation {
  createPlaylist(input: CreatePlaylistInput!): Playlist!
  updatePlaylist(id: ID!, input: UpdatePlaylistInput!): Playlist!
  deletePlaylist(id: ID!): Boolean!
  
  addMediaItem(playlistId: ID!, input: MediaItemInput!): MediaItem!
  removeMediaItem(playlistId: ID!, mediaItemId: ID!): Boolean!
  reorderMediaItems(playlistId: ID!, mediaItemIds: [ID!]!): Playlist!
  
  sharePlaylist(id: ID!, groupId: Int!): Playlist!
}
