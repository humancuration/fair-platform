type Survey {
  id: ID!
  title: String!
  description: String
  domain: SurveyDomain!
  questions: [Question!]!
  features: DomainFeatures
  status: SurveyStatus!
  createdById: Int!
  createdBy: User!
  collaborators: [User!]!
  responses: [SurveyResponse!]!
  analytics: Analytics
  linkedContent: [LinkedContent!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Question {
  id: ID!
  type: QuestionType!
  title: String!
  description: String
  required: Boolean!
  config: JSON
  order: Int!
  validation: JSON
  conditions: JSON
}

type SurveyResponse {
  id: ID!
  surveyId: ID!
  respondentId: Int!
  answers: JSON!
  metadata: JSON
  respondent: User!
  createdAt: DateTime!
}

type Analytics {
  id: ID!
  surveyId: ID!
  results: JSON!
  insights: [Insight!]!
  correlations: [Correlation!]!
  trends: [Trend!]!
  updatedAt: DateTime!
}

type Insight {
  id: ID!
  type: InsightType!
  description: String!
  data: JSON!
  confidence: Float!
}

type Correlation {
  id: ID!
  questionPair: [ID!]!
  coefficient: Float!
  strength: CorrelationStrength!
  significance: Float!
}

type Trend {
  id: ID!
  metric: String!
  direction: TrendDirection!
  magnitude: Float!
  period: String!
  data: JSON!
}

type LinkedContent {
  id: ID!
  type: LinkedContentType!
  contentId: ID!
  title: String!
  metadata: JSON
}

enum SurveyDomain {
  GENERAL
  EVENT
  GAME_TESTING
  ECO_PRODUCTION
  MEDIA_SCREENING
  PRODUCT_TESTING
  WORKER_FEEDBACK
}

enum QuestionType {
  TEXT
  MULTIPLE_CHOICE
  CHECKBOX
  SCALE
  MATRIX
  FILE_UPLOAD
  TIMESTAMP_FEEDBACK
  LOCATION
  MEDIA_RESPONSE
  ENVIRONMENTAL_METRICS
}

enum InsightType {
  PATTERN
  ANOMALY
  RECOMMENDATION
  PREDICTION
}

enum CorrelationStrength {
  STRONG
  MODERATE
  WEAK
  NONE
}

enum TrendDirection {
  INCREASING
  DECREASING
  STABLE
  FLUCTUATING
}

input CreateSurveyInput {
  title: String!
  description: String
  domain: SurveyDomain!
  questions: [QuestionInput!]!
  features: DomainFeaturesInput
}

input QuestionInput {
  type: QuestionType!
  title: String!
  description: String
  required: Boolean!
  config: JSON
  order: Int!
  validation: JSON
  conditions: JSON
}

input DomainFeaturesInput {
  realTimeTracking: Boolean
  geoLocation: Boolean
  timeSeriesData: Boolean
  mediaCapture: Boolean
  environmentalMetrics: Boolean
  interactiveElements: Boolean
  automatedTesting: Boolean
}

input SurveyResponseInput {
  answers: JSON!
  metadata: JSON
}

type Query {
  survey(id: ID!): Survey
  surveys(domain: SurveyDomain): [Survey!]!
  surveyResponses(surveyId: ID!): [SurveyResponse!]!
  surveyAnalytics(surveyId: ID!): Analytics
  surveyTemplates(domain: SurveyDomain): [Survey!]!
}

type Mutation {
  createSurvey(input: CreateSurveyInput!): Survey!
  updateSurvey(id: ID!, input: CreateSurveyInput!): Survey!
  deleteSurvey(id: ID!): Boolean!
  
  submitSurveyResponse(surveyId: ID!, input: SurveyResponseInput!): SurveyResponse!
  
  addCollaborator(surveyId: ID!, userId: Int!): Survey!
  removeCollaborator(surveyId: ID!, userId: Int!): Survey!
  
  linkContent(surveyId: ID!, type: LinkedContentType!, contentId: ID!, title: String!): LinkedContent!
  unlinkContent(surveyId: ID!, contentId: ID!): Boolean!
  
  generateAnalytics(surveyId: ID!): Analytics!
}

type Subscription {
  surveyResponseAdded(surveyId: ID!): SurveyResponse!
  analyticsUpdated(surveyId: ID!): Analytics!
  realTimeResults(surveyId: ID!): JSON!
}
